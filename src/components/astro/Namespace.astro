---
import { getGrafanaDashboardUrl, getNamespaceDashboardUrl, getWorkloadLogsUrl } from "@/lib/grafana";
import type { NamespaceInfo } from "@/lib/k8s/client";
import { CalendarDays, Activity, Box, Cpu, MemoryStick } from "lucide-react";

interface Props {
  namespaceInfo: NamespaceInfo;
  name: string;
}
const { namespaceInfo, name } = Astro.props;
const { namespace, ingressUrls, services, deployments, resourceUsage } = namespaceInfo;
---

<div class="bg-background text-foreground dark:bg-background dark:text-foreground rounded-lg border shadow-sm">
  <div class="p-4 border-b border-border">
    <div class="flex justify-between items-center">
      <h2 class="text-lg font-semibold">Namespace: {name}</h2>
      <a
        href={getNamespaceDashboardUrl(name)}
        target="_blank"
        rel="noopener noreferrer"
        class="text-xs bg-primary text-primary-foreground px-3 py-1.5 rounded hover:bg-primary/90 transition-colors duration-200"
      >
        Namespace Dashboard
      </a>
    </div>
  </div>
  <div class="p-4 space-y-4">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      <!-- Namespace Details Card -->
      <div class="bg-card text-card-foreground dark:bg-card dark:text-card-foreground p-4 rounded-lg shadow-sm space-y-3">
        <h3 class="text-sm font-medium flex items-center gap-2">
          <Box className="h-4 w-4" />
          Namespace Info
        </h3>
        <div class="space-y-2">
          <div class="flex items-center space-x-2 text-sm">
            <CalendarDays className="h-4 w-4 text-muted-foreground" />
            <span class="text-muted-foreground">Created:</span>
            <span class="font-medium">
              {namespace.metadata?.creationTimestamp
                ? new Date(namespace.metadata.creationTimestamp).toLocaleString()
                : "N/A"}
            </span>
          </div>
          <div class="flex items-center space-x-2 text-sm">
            <Activity className="h-4 w-4 text-muted-foreground" />
            <span class="text-muted-foreground">Status:</span>
            <span class={`font-medium ${
              namespace.status?.phase === 'Active' ? 'text-green-500' : 'text-yellow-500'
            }`}>
              {namespace.status?.phase}
            </span>
          </div>
        </div>
      </div>

      <!-- Resource Usage Card -->
      <div class="bg-card text-card-foreground dark:bg-card dark:text-card-foreground p-4 rounded-lg shadow-sm space-y-3">
        <h3 class="text-sm font-medium flex items-center gap-2">
          <MemoryStick className="h-4 w-4" />
          Resource Usage
        </h3>
        <div class="space-y-2">
          <div class="flex items-center space-x-2 text-sm">
            <Cpu className="h-4 w-4 text-muted-foreground" />
            <span class="text-muted-foreground">CPU:</span>
            <span class="font-medium">{resourceUsage.cpu}</span>
          </div>
          <div class="flex items-center space-x-2 text-sm">
            <MemoryStick className="h-4 w-4 text-muted-foreground" />
            <span class="text-muted-foreground">Memory:</span>
            <span class="font-medium">{resourceUsage.memory}</span>
          </div>
        </div>
      </div>
    </div>

    <!-- Rest of the content remains the same -->
    <div class="space-y-2">
      <h3 class="text-sm font-medium text-muted-foreground dark:text-muted-foreground">
        Ingress URLs
      </h3>
      {
        ingressUrls.length > 0 ? (
          <ul class="space-y-2">
            {ingressUrls.map((url) => (
              <li>
                <a
                  href={url.toString()}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="block text-sm bg-primary/10 p-3 rounded-md hover:bg-primary/20 transition-colors duration-200"
                >
                  <span class="text-primary font-medium">{url.toString()}</span>
                </a>
              </li>
            ))}
          </ul>
        ) : (
          <p class="text-xs text-muted-foreground dark:text-muted-foreground">
            No ingress URLs found for this namespace.
          </p>
        )
      }
    </div>

    <div class="space-y-2">
      <h3
        class="text-sm font-medium text-muted-foreground dark:text-muted-foreground"
      >
        Deployments
      </h3>
      {
        deployments.length > 0 ? (
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {deployments.map((deployment) => (
              <div class="bg-muted dark:bg-muted text-muted-foreground dark:text-muted-foreground p-3 rounded">
                <h4 class="font-medium text-sm mb-2 text-primary">
                  {deployment.metadata?.name}
                </h4>
                <p class="text-xs">
                  <span class="font-medium">Replicas:</span>{" "}
                  {deployment.spec?.replicas}
                </p>
                <p class="text-xs">
                  <span class="font-medium">Strategy:</span>{" "}
                  {deployment.spec?.strategy?.type}
                </p>
                <div class="mt-2 flex space-x-2">
                  <a
                    href={getWorkloadLogsUrl(name, deployment.metadata?.name || "")}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-xs bg-primary text-primary-foreground px-2 py-1 rounded hover:bg-primary/90 transition-colors duration-200"
                  >
                    Logs
                  </a>
                  <a
                    href={getGrafanaDashboardUrl(
                      name,
                      deployment.metadata?.name || ""
                    )}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-xs bg-primary text-primary-foreground px-2 py-1 rounded hover:bg-primary/90 transition-colors duration-200"
                  >
                    Dashboard
                  </a>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <p class="text-xs text-muted-foreground dark:text-muted-foreground">
            No deployments found in this namespace.
          </p>
        )
      }
    </div>

    <div class="space-y-2">
      <h3
        class="text-sm font-medium text-muted-foreground dark:text-muted-foreground"
      >
        Services
      </h3>
      {
        services.length > 0 ? (
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {services.map((service) => (
              <div class="bg-muted dark:bg-muted text-muted-foreground dark:text-muted-foreground p-3 rounded">
                <h4 class="font-medium text-sm mb-2 text-primary">
                  {service.metadata?.name}
                </h4>
                <p class="text-xs">
                  <span class="font-medium">Type:</span> {service.spec?.type}
                </p>
                <p class="text-xs">
                  <span class="font-medium">Cluster IP:</span>{" "}
                  {service.spec?.clusterIP}
                </p>
                {service.spec?.ports && (
                  <p class="text-xs">
                    <span class="font-medium">Ports:</span>{" "}
                    {service.spec.ports
                      .map((port) => `${port.port}/${port.protocol}`)
                      .join(", ")}
                  </p>
                )}
              </div>
            ))}
          </div>
        ) : (
          <p class="text-xs text-muted-foreground dark:text-muted-foreground">
            No services found in this namespace.
          </p>
        )
      }
    </div>
  </div>
</div>
